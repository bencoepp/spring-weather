name: Build & push Docker image

on:
  push:
    branches: [ "main" ]         # build on every commit to main
    tags:    [ "v*" ]            # â€¦and on version tags like v1.2.0
  pull_request:                  # PRs get a build too, but images stay local
    branches: [ "main" ]

permissions:                     # needed for ghcr
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  # e.g. ghcr.io/org/repo

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout project sources
      - uses: actions/checkout@v4            # latest stable release :contentReference[oaicite:0]{index=0}

      # 2 (Optional) enable QEMU so Buildx can emulate non-x86 targets
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3    # QEMU binaries :contentReference[oaicite:1]{index=1}

      # 3 Create a Buildx builder (BuildKit)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # BuildKit wrapper :contentReference[oaicite:2]{index=2}

      # 4 Authenticate to ghcr.io using the automatic GITHUB_TOKEN
      - name: Log in to GHCR
        uses: docker/login-action@v3         # Registry login helper :contentReference[oaicite:3]{index=3}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5 Generate sane tags & labels (latest, sha, semver, etc.)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5      # Tag / label generator :contentReference[oaicite:4]{index=4}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # 6 Build (and push except on PRs)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6    # BuildKit front-end :contentReference[oaicite:5]{index=5}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max